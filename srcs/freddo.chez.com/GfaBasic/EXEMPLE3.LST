' ***************************
' * Debut du Programme      *
' ***************************
' * Exemple 3 : affiche une *
' * image de type DEGAS     *
' ***************************
' * Charge une image Degas  *
' * en la visualisant puis  *
' * rend la main tout en re *
' * mettant la palette ini  *
' * tiale                   *
' ***************************
DIM palette(16)             ! DIMension integar array for storing colour numbers
@save_palette               ! Save Desktop colours
'
CLS                         ! Efface l'ecran
@charge_degas               ! Charge une image PI1 et l'affiche
~INP(2)                     ! Attente d'une touche
'
@restore_palette            ! Restore desktop colours
EDIT                        ! Fin du programme
'
' ****************************************
' * procedure qui charge une image degas *
' ****************************************
PROCEDURE charge_degas
  LOCAL image$
  FILESELECT "\*.PI1","",nom$
  IF LEN(nom$) AND RIGHT$(nom$)<>"\"
    image$=SPACE$(32066)
    BLOAD nom$,VARPTR(image$)
    BMOVE VARPTR(image$)+34,XBIOS(2),32000
    VOID XBIOS(6,L:VARPTR(image$)+2)
  ELSE
    ALERT 3,"Image selectionnee | n'existe pas !",1,"OK",a%
  ENDIF
RETURN
'
' **********************************************************
' * procedures qui sauvegarde/retablie la palette initiale *
' **********************************************************
'
PROCEDURE save_palette
  LOCAL i                   ! Limit influence of variable
  FOR ctr%=0 TO 15
    palette(ctr%)=XBIOS(7,W:ctr%,W:-1)  ! XBIOS(7,ctr%,c%) sets or determines
  NEXT ctr%                             ! colour register.
RETURN                                  ! ctr%=number of colour register(0-15)
'                                       ! c%=-1 for new color
PROCEDURE restore_palette
  LOCAL ctr%               ! Limit influence of variable
  FOR ctr%=0 TO 15
    SETCOLOR ctr%,palette(ctr%)         ! restore colours using the numbers
  NEXT ctr%                             ! saved in the palette() array.
RETURN
'
